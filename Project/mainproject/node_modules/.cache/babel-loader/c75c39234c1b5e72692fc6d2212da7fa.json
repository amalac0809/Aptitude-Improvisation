{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\mainproject\\\\src\\\\LoginForm.js\";\nimport React from \"react\";\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    };\n  }\n\n  setInputValue(property, val) {\n    val = val.trim();\n\n    if (val.length > 12) {\n      return;\n    }\n\n    this.setState({\n      [property]: val\n    });\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    });\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n\n    if (!this.state.password) {\n      return;\n    }\n\n    this.setState({\n      buttonDisabled: true\n    });\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n        })\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginForm\",\n      children: [\"Log In\", /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: this.state.username ? this.state.username : '',\n        onChange: val => this.setInputValue('username', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: this.state.password ? this.state.password : '',\n        onChange: val => this.setInputValue('password', val)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"Login\",\n        disabled: this.state.buttonDisabled,\n        onClick: () => this.doLogin()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/user/Desktop/Project/mainproject/src/LoginForm.js"],"names":["React","InputField","SubmitButton","UserStore","LoginForm","Component","constructor","props","state","username","password","buttonDisabled","setInputValue","property","val","trim","length","setState","resetForm","doLogin","res","fetch","method","headers","body","JSON","stringify","result","json","success","isLoggedIn","alert","msg","e","console","log","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport InputField from './InputField';\r\nimport SubmitButton from './SubmitButton';\r\nimport UserStore from './stores/UserStore';\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    }\r\n  }\r\n\r\n  setInputValue(property,val){\r\n      val = val.trim();\r\n      if(val.length > 12) {\r\n        return;\r\n      }\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: '',\r\n      password: '',\r\n      buttonDisabled: false\r\n    })\r\n  }\r\n\r\n  async doLogin()\r\n  {\r\n     if(!this.state.username) {\r\n       return;\r\n     }\r\n     if(!this.state.password) {\r\n       return;\r\n     }\r\n     this.setState({\r\n       buttonDisabled: true\r\n     })\r\n\r\n     try {\r\n        let res = await fetch('/login',{\r\n          method: 'post',\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n      if(result && result.success) {\r\n        UserStore.isLoggedIn=true;\r\n        UserStore.username = result.username;\r\n      }\r\n      else if (result && result.success === false) {\r\n          this.resetForm();\r\n          alert(result.msg);\r\n      }\r\n\r\n     }\r\n\r\n     catch(e)\r\n     {\r\n        console.log(e);\r\n        this.resetForm();\r\n     }\r\n\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <div className=\"loginForm\">\r\n        Log In\r\n        <InputField\r\n            type='text'\r\n            placeholder='Username'\r\n            value={this.state.username ? this.state.username : ''}\r\n            onChange={ (val) => this.setInputValue('username',val) }\r\n        />\r\n        <InputField\r\n            type='password'\r\n            placeholder='Password'\r\n            value={this.state.password ? this.state.password : ''}\r\n            onChange={ (val) => this.setInputValue('password',val) }\r\n        />\r\n        <SubmitButton \r\n            text='Login'\r\n            disabled={this.state.buttonDisabled}\r\n            onClick={ () => this.doLogin()}\r\n        />\r\n    </div>\r\n  );\r\n  }\r\n}\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}